name: Build and Deploy Unity Project for Windows

on:
  push:
    branches:
      - 'main'

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
          submodules: recursive

      - name: Cache Unity Library
        id: cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
            
      - name: Build project
        if: steps.cache.outputs.cache-hit != 'true'
        id: unity_build
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneWindows
          
  deploy:
    name: Deploy to itch.io
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetch the entire history for git operations

    - name: Set release date
      run: echo "RELEASE_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}

    - name: Set short hash
      run: echo "SHORT_HASH=$(git rev-parse --short HEAD)" >> ${GITHUB_ENV}
    
    - name: List Build Directory Contents
      run: ls -Rd */

    - name: Push Windows version to itch.io
      uses: manleydev/butler-publish-itchio-action@v1.0.3
      env:
        BUTLER_CREDENTIALS: ${{ secrets.MY_ITCH_API_CODE }}
        ITCH_GAME: ${{ secrets.MY_ITCH_GAME }}
        ITCH_USER: ${{ secrets.MY_ITCH_USERNAME }}
        VERSION: ${{ env.RELEASE_DATE }}-${{ env.SHORT_HASH }}
        CHANNEL: windows
        ENTRY_POINT: ${{ steps.unity_build.outputs.build-path }}
